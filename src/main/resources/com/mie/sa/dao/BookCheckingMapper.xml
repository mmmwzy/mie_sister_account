<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mie.sa.dao.BookCheckingMapper" >
  <resultMap id="BaseResultMap" type="com.mie.sa.entity.BookChecking" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
    <result column="apply_user_id" property="applyUserId" jdbcType="VARCHAR" />
    <result column="check_user_id" property="checkUserId" jdbcType="VARCHAR" />
    <result column="check_alipay_balance" property="checkAlipayBalance" jdbcType="DECIMAL" />
    <result column="check_status" property="checkStatus" jdbcType="TINYINT" />
    <result column="check_balance" property="checkBalance" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, book_id, apply_user_id, check_user_id, check_alipay_balance, check_status, check_balance, 
    create_time, update_time, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mie.sa.entity.BookCheckingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sa_book_checking
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sa_book_checking
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sa_book_checking
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mie.sa.entity.BookCheckingExample" >
    delete from sa_book_checking
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mie.sa.entity.BookChecking" useGeneratedKeys="true" keyProperty="id" >
    <bind name="_uuid" value="com.mie.base.utils.UUID.UUIDGenerator@generateUUIDAndSetId(#this)"/>
    insert into sa_book_checking (id, book_id, apply_user_id, check_user_id, 
      check_alipay_balance, check_status, check_balance, 
      create_time, update_time, is_delete
      )
    values (#{_uuid}, #{bookId,jdbcType=VARCHAR}, #{applyUserId,jdbcType=VARCHAR}, #{checkUserId,jdbcType=VARCHAR}, 
      #{checkAlipayBalance,jdbcType=DECIMAL}, #{checkStatus,jdbcType=TINYINT}, #{checkBalance,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mie.sa.entity.BookChecking" useGeneratedKeys="true" keyProperty="id" >
    <bind name="_uuid" value="@com.mie.base.utils.UUID.UUIDGenerator@generateUUIDAndSetId(#this)"/>
    insert into sa_book_checking
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="applyUserId != null" >
        apply_user_id,
      </if>
      <if test="checkUserId != null" >
        check_user_id,
      </if>
      <if test="checkAlipayBalance != null" >
        check_alipay_balance,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="checkBalance != null" >
        check_balance,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{_uuid},
      <if test="bookId != null" >
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="applyUserId != null" >
        #{applyUserId,jdbcType=VARCHAR},
      </if>
      <if test="checkUserId != null" >
        #{checkUserId,jdbcType=VARCHAR},
      </if>
      <if test="checkAlipayBalance != null" >
        #{checkAlipayBalance,jdbcType=DECIMAL},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="checkBalance != null" >
        #{checkBalance,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mie.sa.entity.BookCheckingExample" resultType="java.lang.Integer" >
    select count(*) from sa_book_checking
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sa_book_checking
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyUserId != null" >
        apply_user_id = #{record.applyUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkUserId != null" >
        check_user_id = #{record.checkUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkAlipayBalance != null" >
        check_alipay_balance = #{record.checkAlipayBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.checkStatus != null" >
        check_status = #{record.checkStatus,jdbcType=TINYINT},
      </if>
      <if test="record.checkBalance != null" >
        check_balance = #{record.checkBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sa_book_checking
    set id = #{record.id,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=VARCHAR},
      apply_user_id = #{record.applyUserId,jdbcType=VARCHAR},
      check_user_id = #{record.checkUserId,jdbcType=VARCHAR},
      check_alipay_balance = #{record.checkAlipayBalance,jdbcType=DECIMAL},
      check_status = #{record.checkStatus,jdbcType=TINYINT},
      check_balance = #{record.checkBalance,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mie.sa.entity.BookChecking" >
    update sa_book_checking
    <set >
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="applyUserId != null" >
        apply_user_id = #{applyUserId,jdbcType=VARCHAR},
      </if>
      <if test="checkUserId != null" >
        check_user_id = #{checkUserId,jdbcType=VARCHAR},
      </if>
      <if test="checkAlipayBalance != null" >
        check_alipay_balance = #{checkAlipayBalance,jdbcType=DECIMAL},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="checkBalance != null" >
        check_balance = #{checkBalance,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mie.sa.entity.BookChecking" >
    update sa_book_checking
    set book_id = #{bookId,jdbcType=VARCHAR},
      apply_user_id = #{applyUserId,jdbcType=VARCHAR},
      check_user_id = #{checkUserId,jdbcType=VARCHAR},
      check_alipay_balance = #{checkAlipayBalance,jdbcType=DECIMAL},
      check_status = #{checkStatus,jdbcType=TINYINT},
      check_balance = #{checkBalance,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insertBatch" parameterType="com.mie.sa.entity.BookChecking" >
    insert into sa_book_checking (id, book_id, apply_user_id, 
      check_user_id, check_alipay_balance, 
      check_status, check_balance, create_time, 
      update_time, is_delete) values 
    <foreach collection="list" item="item" index="index" separator="," >
      (#{_uuid}, #{item.bookId,jdbcType=VARCHAR}, #{item.applyUserId,jdbcType=VARCHAR}, 
        #{item.checkUserId,jdbcType=VARCHAR}, #{item.checkAlipayBalance,jdbcType=DECIMAL}, 
        #{item.checkStatus,jdbcType=TINYINT}, #{item.checkBalance,jdbcType=DECIMAL}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.isDelete,jdbcType=TINYINT})
    </foreach>
  </insert>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.mie.sa.entity.BookCheckingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sa_book_checking
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>