<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mie.sa.dao.BillMapper" >
  <resultMap id="BaseResultMap" type="com.mie.sa.entity.Bill" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="bill_context_type" property="billContextType" jdbcType="TINYINT" />
    <result column="bill_type" property="billType" jdbcType="TINYINT" />
    <result column="bill_describe" property="billDescribe" jdbcType="VARCHAR" />
    <result column="bill_amount" property="billAmount" jdbcType="DECIMAL" />
    <result column="bill_remark" property="billRemark" jdbcType="VARCHAR" />
    <result column="bill_user_name" property="billUserName" jdbcType="VARCHAR" />
    <result column="bill_user_id" property="billUserId" jdbcType="VARCHAR" />
    <result column="bill_dispatch_type" property="billDispatchType" jdbcType="TINYINT" />
    <result column="bill_dispatch_status" property="billDispatchStatus" jdbcType="TINYINT" />
    <result column="bill_dispatch_order" property="billDispatchOrder" jdbcType="VARCHAR" />
    <result column="bill_data_view" property="billDataView" jdbcType="VARCHAR" />
    <result column="bill_date" property="billDate" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bill_context_type, bill_type, bill_describe, bill_amount, bill_remark, bill_user_name, 
    bill_user_id, bill_dispatch_type, bill_dispatch_status, bill_dispatch_order, bill_data_view, 
    bill_date, create_time, update_time, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mie.sa.entity.BillExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sa_bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sa_bill
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sa_bill
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mie.sa.entity.BillExample" >
    delete from sa_bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mie.sa.entity.Bill" useGeneratedKeys="true" keyProperty="id" >
    <bind name="_uuid" value="@com.mie.base.utils.UUID.UUIDGenerator@generateUUIDAndSetId(#this)"/>
    insert into sa_bill (id, bill_context_type, bill_type, 
      bill_describe, bill_amount, bill_remark, 
      bill_user_name, bill_user_id, bill_dispatch_type, 
      bill_dispatch_status, bill_dispatch_order, 
      bill_data_view, bill_date, create_time, 
      update_time, is_delete)
    values (#{_uuid}, #{billContextType,jdbcType=TINYINT}, #{billType,jdbcType=TINYINT}, 
      #{billDescribe,jdbcType=VARCHAR}, #{billAmount,jdbcType=DECIMAL}, #{billRemark,jdbcType=VARCHAR}, 
      #{billUserName,jdbcType=VARCHAR}, #{billUserId,jdbcType=VARCHAR}, #{billDispatchType,jdbcType=TINYINT}, 
      #{billDispatchStatus,jdbcType=TINYINT}, #{billDispatchOrder,jdbcType=VARCHAR}, 
      #{billDataView,jdbcType=VARCHAR}, #{billDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mie.sa.entity.Bill" useGeneratedKeys="true" keyProperty="id" >
    <bind name="_uuid" value="@com.mie.base.utils.UUID.UUIDGenerator@generateUUIDAndSetId(#this)"/>
    insert into sa_bill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="billContextType != null" >
        bill_context_type,
      </if>
      <if test="billType != null" >
        bill_type,
      </if>
      <if test="billDescribe != null" >
        bill_describe,
      </if>
      <if test="billAmount != null" >
        bill_amount,
      </if>
      <if test="billRemark != null" >
        bill_remark,
      </if>
      <if test="billUserName != null" >
        bill_user_name,
      </if>
      <if test="billUserId != null" >
        bill_user_id,
      </if>
      <if test="billDispatchType != null" >
        bill_dispatch_type,
      </if>
      <if test="billDispatchStatus != null" >
        bill_dispatch_status,
      </if>
      <if test="billDispatchOrder != null" >
        bill_dispatch_order,
      </if>
      <if test="billDataView != null" >
        bill_data_view,
      </if>
      <if test="billDate != null" >
        bill_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{_uuid},
      <if test="billContextType != null" >
        #{billContextType,jdbcType=TINYINT},
      </if>
      <if test="billType != null" >
        #{billType,jdbcType=TINYINT},
      </if>
      <if test="billDescribe != null" >
        #{billDescribe,jdbcType=VARCHAR},
      </if>
      <if test="billAmount != null" >
        #{billAmount,jdbcType=DECIMAL},
      </if>
      <if test="billRemark != null" >
        #{billRemark,jdbcType=VARCHAR},
      </if>
      <if test="billUserName != null" >
        #{billUserName,jdbcType=VARCHAR},
      </if>
      <if test="billUserId != null" >
        #{billUserId,jdbcType=VARCHAR},
      </if>
      <if test="billDispatchType != null" >
        #{billDispatchType,jdbcType=TINYINT},
      </if>
      <if test="billDispatchStatus != null" >
        #{billDispatchStatus,jdbcType=TINYINT},
      </if>
      <if test="billDispatchOrder != null" >
        #{billDispatchOrder,jdbcType=VARCHAR},
      </if>
      <if test="billDataView != null" >
        #{billDataView,jdbcType=VARCHAR},
      </if>
      <if test="billDate != null" >
        #{billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mie.sa.entity.BillExample" resultType="java.lang.Integer" >
    select count(*) from sa_bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sa_bill
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.billContextType != null" >
        bill_context_type = #{record.billContextType,jdbcType=TINYINT},
      </if>
      <if test="record.billType != null" >
        bill_type = #{record.billType,jdbcType=TINYINT},
      </if>
      <if test="record.billDescribe != null" >
        bill_describe = #{record.billDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.billAmount != null" >
        bill_amount = #{record.billAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.billRemark != null" >
        bill_remark = #{record.billRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.billUserName != null" >
        bill_user_name = #{record.billUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.billUserId != null" >
        bill_user_id = #{record.billUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.billDispatchType != null" >
        bill_dispatch_type = #{record.billDispatchType,jdbcType=TINYINT},
      </if>
      <if test="record.billDispatchStatus != null" >
        bill_dispatch_status = #{record.billDispatchStatus,jdbcType=TINYINT},
      </if>
      <if test="record.billDispatchOrder != null" >
        bill_dispatch_order = #{record.billDispatchOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.billDataView != null" >
        bill_data_view = #{record.billDataView,jdbcType=VARCHAR},
      </if>
      <if test="record.billDate != null" >
        bill_date = #{record.billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sa_bill
    set id = #{record.id,jdbcType=VARCHAR},
      bill_context_type = #{record.billContextType,jdbcType=TINYINT},
      bill_type = #{record.billType,jdbcType=TINYINT},
      bill_describe = #{record.billDescribe,jdbcType=VARCHAR},
      bill_amount = #{record.billAmount,jdbcType=DECIMAL},
      bill_remark = #{record.billRemark,jdbcType=VARCHAR},
      bill_user_name = #{record.billUserName,jdbcType=VARCHAR},
      bill_user_id = #{record.billUserId,jdbcType=VARCHAR},
      bill_dispatch_type = #{record.billDispatchType,jdbcType=TINYINT},
      bill_dispatch_status = #{record.billDispatchStatus,jdbcType=TINYINT},
      bill_dispatch_order = #{record.billDispatchOrder,jdbcType=VARCHAR},
      bill_data_view = #{record.billDataView,jdbcType=VARCHAR},
      bill_date = #{record.billDate,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mie.sa.entity.Bill" >
    update sa_bill
    <set >
      <if test="billContextType != null" >
        bill_context_type = #{billContextType,jdbcType=TINYINT},
      </if>
      <if test="billType != null" >
        bill_type = #{billType,jdbcType=TINYINT},
      </if>
      <if test="billDescribe != null" >
        bill_describe = #{billDescribe,jdbcType=VARCHAR},
      </if>
      <if test="billAmount != null" >
        bill_amount = #{billAmount,jdbcType=DECIMAL},
      </if>
      <if test="billRemark != null" >
        bill_remark = #{billRemark,jdbcType=VARCHAR},
      </if>
      <if test="billUserName != null" >
        bill_user_name = #{billUserName,jdbcType=VARCHAR},
      </if>
      <if test="billUserId != null" >
        bill_user_id = #{billUserId,jdbcType=VARCHAR},
      </if>
      <if test="billDispatchType != null" >
        bill_dispatch_type = #{billDispatchType,jdbcType=TINYINT},
      </if>
      <if test="billDispatchStatus != null" >
        bill_dispatch_status = #{billDispatchStatus,jdbcType=TINYINT},
      </if>
      <if test="billDispatchOrder != null" >
        bill_dispatch_order = #{billDispatchOrder,jdbcType=VARCHAR},
      </if>
      <if test="billDataView != null" >
        bill_data_view = #{billDataView,jdbcType=VARCHAR},
      </if>
      <if test="billDate != null" >
        bill_date = #{billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mie.sa.entity.Bill" >
    update sa_bill
    set bill_context_type = #{billContextType,jdbcType=TINYINT},
      bill_type = #{billType,jdbcType=TINYINT},
      bill_describe = #{billDescribe,jdbcType=VARCHAR},
      bill_amount = #{billAmount,jdbcType=DECIMAL},
      bill_remark = #{billRemark,jdbcType=VARCHAR},
      bill_user_name = #{billUserName,jdbcType=VARCHAR},
      bill_user_id = #{billUserId,jdbcType=VARCHAR},
      bill_dispatch_type = #{billDispatchType,jdbcType=TINYINT},
      bill_dispatch_status = #{billDispatchStatus,jdbcType=TINYINT},
      bill_dispatch_order = #{billDispatchOrder,jdbcType=VARCHAR},
      bill_data_view = #{billDataView,jdbcType=VARCHAR},
      bill_date = #{billDate,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insertBatch" parameterType="com.mie.sa.entity.Bill" >
    insert into sa_bill (id, bill_context_type, bill_type, 
      bill_describe, bill_amount, bill_remark, 
      bill_user_name, bill_user_id, bill_dispatch_type, 
      bill_dispatch_status, bill_dispatch_order, 
      bill_data_view, bill_date, create_time, 
      update_time, is_delete) values 
    <foreach collection="list" item="item" index="index" separator="," >
      (#{_uuid}, #{item.billContextType,jdbcType=TINYINT}, #{item.billType,jdbcType=TINYINT}, 
        #{item.billDescribe,jdbcType=VARCHAR}, #{item.billAmount,jdbcType=DECIMAL}, #{item.billRemark,jdbcType=VARCHAR}, 
        #{item.billUserName,jdbcType=VARCHAR}, #{item.billUserId,jdbcType=VARCHAR}, #{item.billDispatchType,jdbcType=TINYINT}, 
        #{item.billDispatchStatus,jdbcType=TINYINT}, #{item.billDispatchOrder,jdbcType=VARCHAR}, 
        #{item.billDataView,jdbcType=VARCHAR}, #{item.billDate,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.isDelete,jdbcType=TINYINT})
    </foreach>
  </insert>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.mie.sa.entity.BillExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sa_bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>